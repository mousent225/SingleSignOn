//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SingleSignOn.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PORTALEntities : DbContext
    {
        public PORTALEntities()
            : base("name=PORTALEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<CmsFormTemplate> CmsFormTemplates { get; set; }
        public virtual DbSet<CmsPostAction> CmsPostActions { get; set; }
        public virtual DbSet<CmsPost> CmsPosts { get; set; }
        public virtual DbSet<HrDeptMaster> HrDeptMasters { get; set; }
        public virtual DbSet<HrDeptMasterFull> HrDeptMasterFulls { get; set; }
        public virtual DbSet<HrEmpMaster> HrEmpMasters { get; set; }
        public virtual DbSet<SubSystem> SubSystems { get; set; }
        public virtual DbSet<SysAuthorization> SysAuthorizations { get; set; }
        public virtual DbSet<SysCategory> SysCategories { get; set; }
        public virtual DbSet<SysCategoryValue> SysCategoryValues { get; set; }
        public virtual DbSet<SysDocument> SysDocuments { get; set; }
        public virtual DbSet<SysLogHistory> SysLogHistories { get; set; }
        public virtual DbSet<SysMenu> SysMenus { get; set; }
        public virtual DbSet<SysNotice> SysNotices { get; set; }
        public virtual DbSet<SysRole> SysRoles { get; set; }
        public virtual DbSet<SysRoleMapping> SysRoleMappings { get; set; }
        public virtual DbSet<SysUser> SysUsers { get; set; }
        public virtual DbSet<SysUserMapping> SysUserMappings { get; set; }
        public virtual DbSet<InstallNetwork> InstallNetworks { get; set; }
        public virtual DbSet<ItEquipment> ItEquipments { get; set; }
        public virtual DbSet<PhoneService> PhoneServices { get; set; }
        public virtual DbSet<ApplicationConfig> ApplicationConfigs { get; set; }
        public virtual DbSet<ApplicationMaster> ApplicationMasters { get; set; }
        public virtual DbSet<SystemRole> SystemRoles { get; set; }
        public virtual DbSet<ApprovalHistory> ApprovalHistories { get; set; }
        public virtual DbSet<Approval> Approvals { get; set; }
        public virtual DbSet<EmailAddress> EmailAddresses { get; set; }
        public virtual DbSet<InformationSystem> InformationSystems { get; set; }
        public virtual DbSet<CCTVPolicy> CCTVPolicies { get; set; }
        public virtual DbSet<NetClientPolicy> NetClientPolicies { get; set; }
    
        public virtual ObjectResult<SP_GetMenu_Via_MasterMenu_Result> SP_GetMenu_Via_MasterMenu(string masterMenu)
        {
            var masterMenuParameter = masterMenu != null ?
                new ObjectParameter("MasterMenu", masterMenu) :
                new ObjectParameter("MasterMenu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMenu_Via_MasterMenu_Result>("SP_GetMenu_Via_MasterMenu", masterMenuParameter);
        }
    
        public virtual ObjectResult<string> SP_CMS_FORMTEMPLATE_INSERT(string sUBJECT, string dESCRIPTION, Nullable<bool> aCTIVE, string cATEGORY, string fILEPATH, string fILENAME, string uSERID)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var fILEPATHParameter = fILEPATH != null ?
                new ObjectParameter("FILEPATH", fILEPATH) :
                new ObjectParameter("FILEPATH", typeof(string));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CMS_FORMTEMPLATE_INSERT", sUBJECTParameter, dESCRIPTIONParameter, aCTIVEParameter, cATEGORYParameter, fILEPATHParameter, fILENAMEParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<string> SP_CMS_FORMTEMPLATE_UPDATE(Nullable<int> iD, string sUBJECT, string dESCRIPTION, Nullable<bool> aCTIVE, string cATEGORY, string fILEPATH, string fILENAME, string uSERID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var fILEPATHParameter = fILEPATH != null ?
                new ObjectParameter("FILEPATH", fILEPATH) :
                new ObjectParameter("FILEPATH", typeof(string));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CMS_FORMTEMPLATE_UPDATE", iDParameter, sUBJECTParameter, dESCRIPTIONParameter, aCTIVEParameter, cATEGORYParameter, fILEPATHParameter, fILENAMEParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<SP_CMS_POSTS_GET_PLANT_Result> SP_CMS_POSTS_GET_PLANT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CMS_POSTS_GET_PLANT_Result>("SP_CMS_POSTS_GET_PLANT");
        }
    
        public virtual ObjectResult<string> SP_CMS_POSTS_INSERT(string sUBJECT, string cONTENT, Nullable<bool> aCTIVE, string cATEGORY, string kIND, string aPPLYFORPLANT, string uSERID)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var kINDParameter = kIND != null ?
                new ObjectParameter("KIND", kIND) :
                new ObjectParameter("KIND", typeof(string));
    
            var aPPLYFORPLANTParameter = aPPLYFORPLANT != null ?
                new ObjectParameter("APPLYFORPLANT", aPPLYFORPLANT) :
                new ObjectParameter("APPLYFORPLANT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CMS_POSTS_INSERT", sUBJECTParameter, cONTENTParameter, aCTIVEParameter, cATEGORYParameter, kINDParameter, aPPLYFORPLANTParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<string> SP_CMS_POSTS_UPDATE(Nullable<int> iD, string sUBJECT, string cONTENT, Nullable<bool> aCTIVE, string cATEGORY, string kIND, string aPPLYFORPLANT, string uSERID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var kINDParameter = kIND != null ?
                new ObjectParameter("KIND", kIND) :
                new ObjectParameter("KIND", typeof(string));
    
            var aPPLYFORPLANTParameter = aPPLYFORPLANT != null ?
                new ObjectParameter("APPLYFORPLANT", aPPLYFORPLANT) :
                new ObjectParameter("APPLYFORPLANT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CMS_POSTS_UPDATE", iDParameter, sUBJECTParameter, cONTENTParameter, aCTIVEParameter, cATEGORYParameter, kINDParameter, aPPLYFORPLANTParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<SP_CMS_POSTS_GET_Result> SP_CMS_POSTS_GET(string sUBJECT, string cREATOR, string kIND, string cATEGORY, Nullable<int> iD, Nullable<System.DateTime> dATEFROM, Nullable<System.DateTime> dATETO)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cREATORParameter = cREATOR != null ?
                new ObjectParameter("CREATOR", cREATOR) :
                new ObjectParameter("CREATOR", typeof(string));
    
            var kINDParameter = kIND != null ?
                new ObjectParameter("KIND", kIND) :
                new ObjectParameter("KIND", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dATEFROMParameter = dATEFROM.HasValue ?
                new ObjectParameter("DATEFROM", dATEFROM) :
                new ObjectParameter("DATEFROM", typeof(System.DateTime));
    
            var dATETOParameter = dATETO.HasValue ?
                new ObjectParameter("DATETO", dATETO) :
                new ObjectParameter("DATETO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CMS_POSTS_GET_Result>("SP_CMS_POSTS_GET", sUBJECTParameter, cREATORParameter, kINDParameter, cATEGORYParameter, iDParameter, dATEFROMParameter, dATETOParameter);
        }
    
        public virtual ObjectResult<SP_CMS_POSTS_GET_TOP10_Result> SP_CMS_POSTS_GET_TOP10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CMS_POSTS_GET_TOP10_Result>("SP_CMS_POSTS_GET_TOP10");
        }
    
        public virtual ObjectResult<SP_SYS_DEPT_GET_TREE_Result> SP_SYS_DEPT_GET_TREE(Nullable<int> dEPTID)
        {
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_DEPT_GET_TREE_Result>("SP_SYS_DEPT_GET_TREE", dEPTIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_GET_MAIL_GROUP_Result> SP_SYS_GET_MAIL_GROUP(Nullable<int> dEPTID, string dEPTNAME)
        {
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            var dEPTNAMEParameter = dEPTNAME != null ?
                new ObjectParameter("DEPTNAME", dEPTNAME) :
                new ObjectParameter("DEPTNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_GET_MAIL_GROUP_Result>("SP_SYS_GET_MAIL_GROUP", dEPTIDParameter, dEPTNAMEParameter);
        }
    
        public virtual ObjectResult<SP_SYS_MAIL_LIST_Result> SP_SYS_MAIL_LIST(Nullable<int> sEARCHTYPE, string eMPID, string eMPNAME, string sEX, string nATION, Nullable<int> dEPTID, Nullable<bool> hASEMAIL)
        {
            var sEARCHTYPEParameter = sEARCHTYPE.HasValue ?
                new ObjectParameter("SEARCHTYPE", sEARCHTYPE) :
                new ObjectParameter("SEARCHTYPE", typeof(int));
    
            var eMPIDParameter = eMPID != null ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(string));
    
            var eMPNAMEParameter = eMPNAME != null ?
                new ObjectParameter("EMPNAME", eMPNAME) :
                new ObjectParameter("EMPNAME", typeof(string));
    
            var sEXParameter = sEX != null ?
                new ObjectParameter("SEX", sEX) :
                new ObjectParameter("SEX", typeof(string));
    
            var nATIONParameter = nATION != null ?
                new ObjectParameter("NATION", nATION) :
                new ObjectParameter("NATION", typeof(string));
    
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            var hASEMAILParameter = hASEMAIL.HasValue ?
                new ObjectParameter("HASEMAIL", hASEMAIL) :
                new ObjectParameter("HASEMAIL", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_MAIL_LIST_Result>("SP_SYS_MAIL_LIST", sEARCHTYPEParameter, eMPIDParameter, eMPNAMEParameter, sEXParameter, nATIONParameter, dEPTIDParameter, hASEMAILParameter);
        }
    
        public virtual ObjectResult<string> SP_SYS_NOTICES_INSERT(string sUBJECT, string dESCRIPTION, Nullable<bool> aCTIVE, string fILEPATH, string fILENAME, string uSERID)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var fILEPATHParameter = fILEPATH != null ?
                new ObjectParameter("FILEPATH", fILEPATH) :
                new ObjectParameter("FILEPATH", typeof(string));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_SYS_NOTICES_INSERT", sUBJECTParameter, dESCRIPTIONParameter, aCTIVEParameter, fILEPATHParameter, fILENAMEParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<string> SP_SYS_NOTICES_UPDATE(Nullable<int> iD, string sUBJECT, string dESCRIPTION, Nullable<bool> aCTIVE, string fILEPATH, string fILENAME, string uSERID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            var fILEPATHParameter = fILEPATH != null ?
                new ObjectParameter("FILEPATH", fILEPATH) :
                new ObjectParameter("FILEPATH", typeof(string));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_SYS_NOTICES_UPDATE", iDParameter, sUBJECTParameter, dESCRIPTIONParameter, aCTIVEParameter, fILEPATHParameter, fILENAMEParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<SP_GetMenu_Via_MasterMenu_User_Result> SP_GetMenu_Via_MasterMenu_User(string masterMenu, string user)
        {
            var masterMenuParameter = masterMenu != null ?
                new ObjectParameter("MasterMenu", masterMenu) :
                new ObjectParameter("MasterMenu", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMenu_Via_MasterMenu_User_Result>("SP_GetMenu_Via_MasterMenu_User", masterMenuParameter, userParameter);
        }
    
        public virtual ObjectResult<SP_CMS_GET_TREEVIEW_VIA_CATEGORY_Result> SP_CMS_GET_TREEVIEW_VIA_CATEGORY(string cATEGORY, string rOLE)
        {
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var rOLEParameter = rOLE != null ?
                new ObjectParameter("ROLE", rOLE) :
                new ObjectParameter("ROLE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CMS_GET_TREEVIEW_VIA_CATEGORY_Result>("SP_CMS_GET_TREEVIEW_VIA_CATEGORY", cATEGORYParameter, rOLEParameter);
        }
    
        public virtual ObjectResult<SP_SYS_NOTICES_GET_Result> SP_SYS_NOTICES_GET(string sUBJECT, string uSERID, string cREATOR, Nullable<int> iD, Nullable<System.DateTime> dATEFROM, Nullable<System.DateTime> dATETO)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var cREATORParameter = cREATOR != null ?
                new ObjectParameter("CREATOR", cREATOR) :
                new ObjectParameter("CREATOR", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dATEFROMParameter = dATEFROM.HasValue ?
                new ObjectParameter("DATEFROM", dATEFROM) :
                new ObjectParameter("DATEFROM", typeof(System.DateTime));
    
            var dATETOParameter = dATETO.HasValue ?
                new ObjectParameter("DATETO", dATETO) :
                new ObjectParameter("DATETO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_NOTICES_GET_Result>("SP_SYS_NOTICES_GET", sUBJECTParameter, uSERIDParameter, cREATORParameter, iDParameter, dATEFROMParameter, dATETOParameter);
        }
    
        public virtual ObjectResult<SP_SYS_NOTICES_GET_TOP_10_Result> SP_SYS_NOTICES_GET_TOP_10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_NOTICES_GET_TOP_10_Result>("SP_SYS_NOTICES_GET_TOP_10");
        }
    
        public virtual ObjectResult<SP_CMS_FORMTEMPLATE_GET_Result> SP_CMS_FORMTEMPLATE_GET(string sUBJECT, string uSERID, string cREATOR, string cATEGORY, Nullable<int> iD, Nullable<System.DateTime> dATEFROM, Nullable<System.DateTime> dATETO)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var cREATORParameter = cREATOR != null ?
                new ObjectParameter("CREATOR", cREATOR) :
                new ObjectParameter("CREATOR", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dATEFROMParameter = dATEFROM.HasValue ?
                new ObjectParameter("DATEFROM", dATEFROM) :
                new ObjectParameter("DATEFROM", typeof(System.DateTime));
    
            var dATETOParameter = dATETO.HasValue ?
                new ObjectParameter("DATETO", dATETO) :
                new ObjectParameter("DATETO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CMS_FORMTEMPLATE_GET_Result>("SP_CMS_FORMTEMPLATE_GET", sUBJECTParameter, uSERIDParameter, cREATORParameter, cATEGORYParameter, iDParameter, dATEFROMParameter, dATETOParameter);
        }
    
        public virtual ObjectResult<SP_SYS_GET_LOG_BY_DEPTID_Result> SP_SYS_GET_LOG_BY_DEPTID(Nullable<int> dEPTID)
        {
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_GET_LOG_BY_DEPTID_Result>("SP_SYS_GET_LOG_BY_DEPTID", dEPTIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_LOG_HISTORY_Result> SP_SYS_LOG_HISTORY(string sUBJECT, Nullable<int> dEPTID, Nullable<System.DateTime> dATEFROM, Nullable<System.DateTime> dATETO)
        {
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            var dATEFROMParameter = dATEFROM.HasValue ?
                new ObjectParameter("DATEFROM", dATEFROM) :
                new ObjectParameter("DATEFROM", typeof(System.DateTime));
    
            var dATETOParameter = dATETO.HasValue ?
                new ObjectParameter("DATETO", dATETO) :
                new ObjectParameter("DATETO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_LOG_HISTORY_Result>("SP_SYS_LOG_HISTORY", sUBJECTParameter, dEPTIDParameter, dATEFROMParameter, dATETOParameter);
        }
    
        public virtual ObjectResult<POST_HISTORY_Result> POST_HISTORY(Nullable<int> dEPTID)
        {
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POST_HISTORY_Result>("POST_HISTORY", dEPTIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_LOG_HISTORY_DIAGRAM_SITE_ACTIVITY_Result> SP_SYS_LOG_HISTORY_DIAGRAM_SITE_ACTIVITY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_LOG_HISTORY_DIAGRAM_SITE_ACTIVITY_Result>("SP_SYS_LOG_HISTORY_DIAGRAM_SITE_ACTIVITY");
        }
    
        public virtual ObjectResult<SP_SYS_ROLE_GETUSER_Result> SP_SYS_ROLE_GETUSER(string rOLEID, Nullable<System.Guid> sYSTEMID)
        {
            var rOLEIDParameter = rOLEID != null ?
                new ObjectParameter("ROLEID", rOLEID) :
                new ObjectParameter("ROLEID", typeof(string));
    
            var sYSTEMIDParameter = sYSTEMID.HasValue ?
                new ObjectParameter("SYSTEMID", sYSTEMID) :
                new ObjectParameter("SYSTEMID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_ROLE_GETUSER_Result>("SP_SYS_ROLE_GETUSER", rOLEIDParameter, sYSTEMIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_CONFIG_GETALL_Result> SP_APPLICATION_CONFIG_GETALL(string name, Nullable<int> deptId, string kind, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var kindParameter = kind != null ?
                new ObjectParameter("Kind", kind) :
                new ObjectParameter("Kind", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_CONFIG_GETALL_Result>("SP_APPLICATION_CONFIG_GETALL", nameParameter, deptIdParameter, kindParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_MASTER_GETALL_Result> SP_APPLICATION_MASTER_GETALL(string name, Nullable<int> deptId, string kind, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var kindParameter = kind != null ?
                new ObjectParameter("Kind", kind) :
                new ObjectParameter("Kind", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_MASTER_GETALL_Result>("SP_APPLICATION_MASTER_GETALL", nameParameter, deptIdParameter, kindParameter, fromDateParameter, toDateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_CONFIG_GETLIST_Result> SP_APPLICATION_CONFIG_GETLIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_CONFIG_GETLIST_Result>("SP_APPLICATION_CONFIG_GETLIST");
        }
    
        public virtual ObjectResult<SP_EMPLOYEE_INFOR_Result> SP_EMPLOYEE_INFOR(string name, string eMPID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var eMPIDParameter = eMPID != null ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EMPLOYEE_INFOR_Result>("SP_EMPLOYEE_INFOR", nameParameter, eMPIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_USER_LIST_Result> SP_SYS_USER_LIST(Nullable<int> sEARCHTYPE, string eMPID, string eMPNAME, Nullable<int> dEPTID)
        {
            var sEARCHTYPEParameter = sEARCHTYPE.HasValue ?
                new ObjectParameter("SEARCHTYPE", sEARCHTYPE) :
                new ObjectParameter("SEARCHTYPE", typeof(int));
    
            var eMPIDParameter = eMPID != null ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(string));
    
            var eMPNAMEParameter = eMPNAME != null ?
                new ObjectParameter("EMPNAME", eMPNAME) :
                new ObjectParameter("EMPNAME", typeof(string));
    
            var dEPTIDParameter = dEPTID.HasValue ?
                new ObjectParameter("DEPTID", dEPTID) :
                new ObjectParameter("DEPTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_USER_LIST_Result>("SP_SYS_USER_LIST", sEARCHTYPEParameter, eMPIDParameter, eMPNAMEParameter, dEPTIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_MASTER_GETDETAIL_Result> SP_APPLICATION_MASTER_GETDETAIL(Nullable<int> iD, string uSERID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_MASTER_GETDETAIL_Result>("SP_APPLICATION_MASTER_GETDETAIL", iDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_SYSTEMROLE_GETDETAIL_Result> SP_APPLICATION_SYSTEMROLE_GETDETAIL(Nullable<int> mASTERID)
        {
            var mASTERIDParameter = mASTERID.HasValue ?
                new ObjectParameter("MASTERID", mASTERID) :
                new ObjectParameter("MASTERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_SYSTEMROLE_GETDETAIL_Result>("SP_APPLICATION_SYSTEMROLE_GETDETAIL", mASTERIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_APPLICATION_MASTER_INSERT(Nullable<int> applicationId, string subject, string applicant, string requestDate, string costCenter, Nullable<int> deptId, string system, string approvalKind, string approvalLine, string approvalLineJson, string approvalStatus, string nextApprover, Nullable<System.DateTime> confirmDate, string description, string opinion, string contactPerson, string content, Nullable<System.DateTime> createDate, string createUid)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var applicantParameter = applicant != null ?
                new ObjectParameter("Applicant", applicant) :
                new ObjectParameter("Applicant", typeof(string));
    
            var requestDateParameter = requestDate != null ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(string));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            var approvalKindParameter = approvalKind != null ?
                new ObjectParameter("ApprovalKind", approvalKind) :
                new ObjectParameter("ApprovalKind", typeof(string));
    
            var approvalLineParameter = approvalLine != null ?
                new ObjectParameter("ApprovalLine", approvalLine) :
                new ObjectParameter("ApprovalLine", typeof(string));
    
            var approvalLineJsonParameter = approvalLineJson != null ?
                new ObjectParameter("ApprovalLineJson", approvalLineJson) :
                new ObjectParameter("ApprovalLineJson", typeof(string));
    
            var approvalStatusParameter = approvalStatus != null ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(string));
    
            var nextApproverParameter = nextApprover != null ?
                new ObjectParameter("NextApprover", nextApprover) :
                new ObjectParameter("NextApprover", typeof(string));
    
            var confirmDateParameter = confirmDate.HasValue ?
                new ObjectParameter("ConfirmDate", confirmDate) :
                new ObjectParameter("ConfirmDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var opinionParameter = opinion != null ?
                new ObjectParameter("Opinion", opinion) :
                new ObjectParameter("Opinion", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var createUidParameter = createUid != null ?
                new ObjectParameter("CreateUid", createUid) :
                new ObjectParameter("CreateUid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_APPLICATION_MASTER_INSERT", applicationIdParameter, subjectParameter, applicantParameter, requestDateParameter, costCenterParameter, deptIdParameter, systemParameter, approvalKindParameter, approvalLineParameter, approvalLineJsonParameter, approvalStatusParameter, nextApproverParameter, confirmDateParameter, descriptionParameter, opinionParameter, contactPersonParameter, contentParameter, createDateParameter, createUidParameter);
        }
    
        public virtual int SP_APPLICATION_MASTER_UPDATE(Nullable<int> id, Nullable<int> applicationId, string subject, string applicant, string requestDate, string costCenter, Nullable<int> deptId, string system, string approvalKind, string approvalLine, string approvalLineJson, string approvalStatus, string nextApprover, Nullable<System.DateTime> confirmDate, string description, string opinion, string contactPerson, string content, Nullable<System.DateTime> updateDate, string updateUid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var applicantParameter = applicant != null ?
                new ObjectParameter("Applicant", applicant) :
                new ObjectParameter("Applicant", typeof(string));
    
            var requestDateParameter = requestDate != null ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(string));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            var approvalKindParameter = approvalKind != null ?
                new ObjectParameter("ApprovalKind", approvalKind) :
                new ObjectParameter("ApprovalKind", typeof(string));
    
            var approvalLineParameter = approvalLine != null ?
                new ObjectParameter("ApprovalLine", approvalLine) :
                new ObjectParameter("ApprovalLine", typeof(string));
    
            var approvalLineJsonParameter = approvalLineJson != null ?
                new ObjectParameter("ApprovalLineJson", approvalLineJson) :
                new ObjectParameter("ApprovalLineJson", typeof(string));
    
            var approvalStatusParameter = approvalStatus != null ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(string));
    
            var nextApproverParameter = nextApprover != null ?
                new ObjectParameter("NextApprover", nextApprover) :
                new ObjectParameter("NextApprover", typeof(string));
    
            var confirmDateParameter = confirmDate.HasValue ?
                new ObjectParameter("ConfirmDate", confirmDate) :
                new ObjectParameter("ConfirmDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var opinionParameter = opinion != null ?
                new ObjectParameter("Opinion", opinion) :
                new ObjectParameter("Opinion", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateUidParameter = updateUid != null ?
                new ObjectParameter("UpdateUid", updateUid) :
                new ObjectParameter("UpdateUid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_APPLICATION_MASTER_UPDATE", idParameter, applicationIdParameter, subjectParameter, applicantParameter, requestDateParameter, costCenterParameter, deptIdParameter, systemParameter, approvalKindParameter, approvalLineParameter, approvalLineJsonParameter, approvalStatusParameter, nextApproverParameter, confirmDateParameter, descriptionParameter, opinionParameter, contactPersonParameter, contentParameter, updateDateParameter, updateUidParameter);
        }
    
        public virtual ObjectResult<SP_APPROVAL_HISTORY_Result> SP_APPROVAL_HISTORY(string uSERID, Nullable<int> aPPLICATIONID)
        {
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var aPPLICATIONIDParameter = aPPLICATIONID.HasValue ?
                new ObjectParameter("APPLICATIONID", aPPLICATIONID) :
                new ObjectParameter("APPLICATIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPROVAL_HISTORY_Result>("SP_APPROVAL_HISTORY", uSERIDParameter, aPPLICATIONIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_APPROVAL_GETLIST_Result> SP_APPLICATION_APPROVAL_GETLIST(Nullable<int> masterId, Nullable<int> applicationId)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_APPROVAL_GETLIST_Result>("SP_APPLICATION_APPROVAL_GETLIST", masterIdParameter, applicationIdParameter);
        }
    
        public virtual int SP_APPLICATION_MASTER_RECALL(Nullable<int> masterId, Nullable<int> applicationId, string userId)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_APPLICATION_MASTER_RECALL", masterIdParameter, applicationIdParameter, userIdParameter);
        }
    
        public virtual int SP_APPLICATION_MASTER_APPROVE(Nullable<int> masterId, Nullable<int> applicationId, Nullable<bool> isApprove, string comment, string userId, string linkApplication)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var isApproveParameter = isApprove.HasValue ?
                new ObjectParameter("IsApprove", isApprove) :
                new ObjectParameter("IsApprove", typeof(bool));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var linkApplicationParameter = linkApplication != null ?
                new ObjectParameter("LinkApplication", linkApplication) :
                new ObjectParameter("LinkApplication", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_APPLICATION_MASTER_APPROVE", masterIdParameter, applicationIdParameter, isApproveParameter, commentParameter, userIdParameter, linkApplicationParameter);
        }
    
        public virtual int SP_APPLICATION_MASTER_CONFIRM(Nullable<int> masterId, Nullable<bool> status, string linkApplication)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var linkApplicationParameter = linkApplication != null ?
                new ObjectParameter("LinkApplication", linkApplication) :
                new ObjectParameter("LinkApplication", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_APPLICATION_MASTER_CONFIRM", masterIdParameter, statusParameter, linkApplicationParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_EMAILREQUEST_GETDETAIL_Result> SP_APPLICATION_EMAILREQUEST_GETDETAIL(Nullable<int> mASTERID)
        {
            var mASTERIDParameter = mASTERID.HasValue ?
                new ObjectParameter("MASTERID", mASTERID) :
                new ObjectParameter("MASTERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_EMAILREQUEST_GETDETAIL_Result>("SP_APPLICATION_EMAILREQUEST_GETDETAIL", mASTERIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_ITEQUIPMENT_GETDETAIL_Result> SP_APPLICATION_ITEQUIPMENT_GETDETAIL(Nullable<int> mASTERID)
        {
            var mASTERIDParameter = mASTERID.HasValue ?
                new ObjectParameter("MASTERID", mASTERID) :
                new ObjectParameter("MASTERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_ITEQUIPMENT_GETDETAIL_Result>("SP_APPLICATION_ITEQUIPMENT_GETDETAIL", mASTERIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_INFORMATIONSYSTEM_GETDETAIL_Result> SP_APPLICATION_INFORMATIONSYSTEM_GETDETAIL(Nullable<int> mASTERID)
        {
            var mASTERIDParameter = mASTERID.HasValue ?
                new ObjectParameter("MASTERID", mASTERID) :
                new ObjectParameter("MASTERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_INFORMATIONSYSTEM_GETDETAIL_Result>("SP_APPLICATION_INFORMATIONSYSTEM_GETDETAIL", mASTERIDParameter);
        }
    
        public virtual ObjectResult<SP_APPLICATION_NETCLIENTPOLICY_GETDETAIL_Result> SP_APPLICATION_NETCLIENTPOLICY_GETDETAIL(Nullable<int> mASTERID)
        {
            var mASTERIDParameter = mASTERID.HasValue ?
                new ObjectParameter("MASTERID", mASTERID) :
                new ObjectParameter("MASTERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPLICATION_NETCLIENTPOLICY_GETDETAIL_Result>("SP_APPLICATION_NETCLIENTPOLICY_GETDETAIL", mASTERIDParameter);
        }
    }
}
